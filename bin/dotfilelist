#!/usr/bin/env bash
# Just a list of all the dotfiles, might integrate into some sort of parsing for auto git syncing.
#
fileList=(	".config/" \
			".fzf" \
			".emacs.d" \
			".local" \
			".nvim" \
			".oh-my-zsh" \
			".terminfo" \
			".vim" \
			".Xresources.d" \
			".bashrc" \
			".fzf.bash" \
			".fzf.zsh" \
			".profile" \
			".tmux.conf" \
			".Xauthority" \
			".xinitrc" \
			".Xresources" \
			".zshenv" \
			".zshrc" )

# Get current date and time for timestamp on logged archives.
DATE=$(date "+%m-%d-%Y")
TIME=$(date "+%H-%M")

# Create a temporary directory as a safety net.
[[ ! -d "~/Documents/dotfile-backups-$DATE" ]] && mkdir "~/Documents/dotfile-backups-$DATE"

# Assign directory path to a variable.
bakdir="~/Documents/dotfile-backups-$DATE"

# Change current git dir
git init

 case "$1" in
 	-i | --install)
 		echo "Creating bzip2 tarbal archive of local git repo directory in 3..."
 		sleep 1
 		echo "2..."
 		sleep 1
 		echo "1..."
 		echo
 		tar -cfvj "$bakdir/Local-Git_$TIME.tar.bz2" *
 		echo
 		echo "Now creating a bzip2 tarball of config files in-use on this machine for backup in 3..."
 		sleep 1
 		echo "2..."
 		sleep 1
 		echo "1..."
 		echo
 		tar -cfvj "$bakdir/Local-Configs_$TIME.tar.bz2" "${filelist[@]}"
		echo
 		echo "Tarballs of both the local repo before updating, as well as the config files that"
		echo "were currently in-use on this system created and located in: \"$bakdir\" directory."
		echo
		sleep 5
		echo "Syncing with remote git repo, then installing..."
		git pull origin master
		echo
 		for i in "${fileList[@]}"
 		do
 			cp --verbose -r "$i" "$HOME/$i"
 		done
		echo "Dotfiles installed, exiting..."
		exit 0
 		;;
 	-u | --upload)
 		echo "Before uploading, the remote repo will be downloaded, compressed, and will be located at:"
		echo "\"$bakdir/Remote-Repo-$TIME.tar.bz2\"..."
		sleep 3

 		git archive -v --format=tar --remote=https://github.com/Projohnston/dotfiles.git \
			-o "$bakdir/Remote-Repo-$TIME.tar"
 		bzip2 -z "$bakdir/Remote-Repo-$TIME.tar" "$bakdir/Remote-Repo-$TIME.tar.bz2" 

 		for i in "${fileList[@]}"
 		do
 			cp --verbose -r "$HOME/$i" .
 		done
		git init
		git add -A .
		git status
		read -n 1 -p "Are the git status changes ok? [y/n] (Default=yes, if no the script will exit.)" yn;
		# Disable case-sensitive matching cuz I'm too lazy/braindead rn to figure out the regex.
		shopt -s nocasematch
		[[ "$yn" == "n" ]] && echo "Files added to be staged, but no commit or push. Exiting..." && exit 1
		read -p 'Name the commit: ' commitdesc
		git commit -m "$commitdesc"
		git push origin master
		echo
		echo "Successfully uploaded to git repo."
		echo
		exit 0
 		;;
	-d | --diff)
		echo "Prints difference between local and remote repos."
		git diff --stat --patch origin master
		;;
	*)
		echo "Usage: ./dotfilelist [ACTION]"
		echo
		echo "ACTIONS:"
		echo "			-i | --install		Pulls from remote git repo and installs/updates local files."
		echo "			-u | --upload		Pulls remote repo to create a backup bz2 tarball, then uploads"
		echo "								files listed in the \"fileList\" library to github repo."
		echo "			-d | --diff			Runs a 'git diff' command between local and remote repo."
		echo
		echo "TODO: Implement a function to compare remote and local files, for intelligent error protection"
		echo "		rather than just creating archives of the whole repo."
		echo
		exit 0
		;;
esac
