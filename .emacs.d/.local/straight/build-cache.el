
:kak

"28.0.50"

#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("straight" ("2020-09-15 11:05:28" ("emacs") (:type git :host github :repo "raxod502/straight.el" :files ("straight*.el") :branch "develop" :no-byte-compile t :package "straight" :local-repo "straight.el")) "org-elpa" ("2020-09-15 11:05:28" nil (:local-repo nil :package "org-elpa" :type git)) "melpa" ("2020-09-15 11:05:28" nil (:type git :host github :repo "melpa/melpa" :no-build t :package "melpa" :local-repo "melpa")) "gnu-elpa-mirror" ("2020-09-15 11:05:28" nil (:type git :host github :repo "emacs-straight/gnu-elpa-mirror" :no-build t :package "gnu-elpa-mirror" :local-repo "gnu-elpa-mirror")) "emacsmirror-mirror" ("2020-09-15 11:05:28" nil (:type git :host github :repo "emacs-straight/emacsmirror-mirror" :no-build t :package "emacsmirror-mirror" :local-repo "emacsmirror-mirror")) "use-package" ("2020-09-15 11:05:28" ("emacs" "bind-key") (:type git :flavor melpa :files (:defaults (:exclude "bind-key.el" "bind-chord.el" "use-package-chords.el" "use-package-ensure-system-package.el") "use-package-pkg.el") :host github :repo "jwiegley/use-package" :package "use-package" :local-repo "use-package")) "bind-key" ("2020-09-15 11:05:28" nil (:flavor melpa :files ("bind-key.el" "bind-key-pkg.el") :package "bind-key" :local-repo "use-package" :type git :repo "jwiegley/use-package" :host github)) "async" ("2020-09-15 11:05:28" ("emacs") (:type git :flavor melpa :host github :repo "jwiegley/emacs-async" :package "async" :local-repo "emacs-async"))))

#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ())

#s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (org-elpa #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 1 "melpa" nil "gnu-elpa-mirror" nil "emacsmirror-mirror" nil "straight" nil "use-package" nil "bind-key" nil "async" nil "auto-minor-mode" nil "gcmh" nil "all-the-icons" nil "hide-mode-line" nil "highlight-numbers" nil "rainbow-delimiters" nil "restart-emacs" nil "better-jumper" nil "dtrt-indent" nil "helpful" nil "pcre2el" nil "smartparens" nil "undo-tree" nil "ws-butler" nil "xclip" nil "projectile" nil "general" nil "which-key" nil)) melpa #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 2 "gnu-elpa-mirror" nil "emacsmirror-mirror" nil "straight" nil "use-package" (use-package :type git :flavor melpa :files (:defaults (:exclude "bind-key.el" "bind-chord.el" "use-package-chords.el" "use-package-ensure-system-package.el") "use-package-pkg.el") :host github :repo "jwiegley/use-package") "bind-key" (bind-key :type git :flavor melpa :files ("bind-key.el" "bind-key-pkg.el") :host github :repo "jwiegley/use-package") "async" (async :type git :flavor melpa :host github :repo "jwiegley/emacs-async") "auto-minor-mode" (auto-minor-mode :type git :flavor melpa :host github :repo "joewreschnig/auto-minor-mode") "gcmh" (gcmh :type git :flavor melpa :host gitlab :repo "koral/gcmh") "all-the-icons" (all-the-icons :type git :flavor melpa :files (:defaults "data" "all-the-icons-pkg.el") :host github :repo "domtronn/all-the-icons.el") "hide-mode-line" (hide-mode-line :type git :flavor melpa :host github :repo "hlissner/emacs-hide-mode-line") "highlight-numbers" (highlight-numbers :type git :flavor melpa :host github :repo "Fanael/highlight-numbers") "rainbow-delimiters" (rainbow-delimiters :type git :flavor melpa :host github :repo "Fanael/rainbow-delimiters") "restart-emacs" (restart-emacs :type git :flavor melpa :host github :repo "iqbalansari/restart-emacs") "better-jumper" (better-jumper :type git :flavor melpa :host github :repo "gilbertw1/better-jumper") "dtrt-indent" (dtrt-indent :type git :flavor melpa :host github :repo "jscheid/dtrt-indent") "helpful" (helpful :type git :flavor melpa :host github :repo "Wilfred/helpful") "pcre2el" (pcre2el :type git :flavor melpa :files ("pcre2el.el" "pcre2el-pkg.el") :host github :repo "joddie/pcre2el") "smartparens" (smartparens :type git :flavor melpa :host github :repo "Fuco1/smartparens") "undo-tree" nil "ws-butler" (ws-butler :type git :flavor melpa :host github :repo "lewang/ws-butler") "xclip" nil "projectile" (projectile :type git :flavor melpa :files ("projectile.el" "projectile-pkg.el") :host github :repo "bbatsov/projectile") "general" (general :type git :flavor melpa :host github :repo "noctuid/general.el") "which-key" (which-key :type git :flavor melpa :host github :repo "justbur/emacs-which-key"))) gnu-elpa-mirror #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 3 "emacsmirror-mirror" nil "straight" nil "undo-tree" (undo-tree :type git :host github :repo "emacs-straight/undo-tree" :files ("*" (:exclude ".git"))) "xclip" (xclip :type git :host github :repo "emacs-straight/xclip" :files ("*" (:exclude ".git"))))) emacsmirror-mirror #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 2 "straight" (straight :type git :host github :repo "emacsmirror/straight")))))

("org-elpa" "melpa" "gnu-elpa-mirror" "emacsmirror-mirror" "straight" "emacs" "use-package" "bind-key" "async" "auto-minor-mode" "gcmh" "all-the-icons" "hide-mode-line" "highlight-numbers" "rainbow-delimiters" "restart-emacs" "better-jumper" "dtrt-indent" "helpful" "pcre2el" "smartparens" "undo-tree" "ws-butler" "xclip" "projectile" "general" "which-key")

t
